/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        this->preorder = preorder;
        for(int i=0;i<inorder.size();i++){
            dic[inorder[i]] = i;
        }
        return recur(0,0,inorder.size()-1);
    }
private:
    vector<int> preorder;
    unordered_map<int,int> dic;

    TreeNode* recur(int root, int left, int right){
        if(left>right) return nullptr;
        //建立根节点
        TreeNode* node = new TreeNode(preorder[root]);
        //划分根节点，左子树，右子树
        int i = dic[preorder[root]];
        node->left = recur(root+1,left,i-1);
        node->right = recur(root+i-left+1,i+1,right);
        return node;
    }
};